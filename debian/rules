#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

PACKAGE := mysql-workbench

# parallel build by default on linux
ifeq ($(DEB_HOST_ARCH_OS),linux)
	ifeq ($(findstring parallel=,$(DEB_BUILD_OPTIONS)),)
		export DEB_BUILD_OPTIONS+=parallel=$(shell grep -c ^processor /proc/cpuinfo)
	endif
endif
$(info Info: DEB_BUILD_OPTIONS:$(origin DEB_BUILD_OPTIONS)=$(DEB_BUILD_OPTIONS))

%:
	dh $@ --parallel --with autoreconf,python2

override_dh_auto_clean:
	-dh_auto_clean
	$(RM) -v library/forms/swig/mforms.py library/forms/swig/mforms_wrap.* debian/*.xpm

override_dh_autoreconf:
	#NOCONFIGURE="1" ./autogen.sh
	dh_autoreconf

override_dh_auto_configure:
	dh_auto_configure -- --libdir=/usr/lib \
		--exec-prefix=/usr/lib/$(PACKAGE) \
		--enable-grt-generation \
		--enable-mysql-utilities \
		--enable-dependency-tracking
		#--with-commondirname

override_dh_auto_build:
	# rebuild files generated by swig
	$(MAKE) -C library/forms/swig --makefile Makefile.swig
	# rebuild files generated by flex/bison
	cd library/sql-parser/yy_gen-tool/yy_gen-tool/ \
	&& bison -dl parser.yy \
	&& flex -B -oparser.lex.cc parser.lex
	# generate icon
	convert images/icons/MySQLWorkbench-32.png debian/mysql-workbench.xpm
	# generate documentation for mysql-workbench-docs package
	#cd doc && ./DoxygenRun.sh
	# remove embedded jquery (link to libjs-jquery will be used)
	$(RM) -v doc/ntv/html/jquery.js
	# build all the rest
	dh_auto_build

override_dh_auto_install:
	dh_auto_install --destdir=$(CURDIR)/debian/tmp
	# install python extras
	dh_auto_install --destdir=$(CURDIR)/debian/$(PACKAGE) \
        -- -C ext install-utils install-connector
	# .desktop to unix line endings
	sed -i 's/\r//g' debian/tmp/usr/share/applications/*.desktop
	# remove *.la files
	find . -name '*.la' -delete -printf 'removing %p\n'
	# move plugins to "/usr/lib/mysql-workbench" where they can be found by M-W
	mv $(CURDIR)/debian/tmp/usr/lib/$(PACKAGE)/plugins/* \
           $(CURDIR)/debian/tmp/usr/lib/$(PACKAGE)/
	# wipe empty dirs if any
	find $(CURDIR)/debian/tmp -type d -empty -delete
	# install link to launcher to /usr/bin/
	dh_link -p$(PACKAGE) \
        usr/lib/$(PACKAGE)/bin/mysql-workbench \
        usr/bin/mysql-workbench

override_dh_compress:
	dh_compress --exclude=.mwb

override_dh_makeshlibs:
	dh_makeshlibs --noscripts

# -dbg package will be over 150 MiB
#override_dh_strip:
#	dh_strip --dbg-package=$(PACKAGE)-dbg


COPHINTS := debian/copyright.hints
VER = $(shell dpkg-parsechangelog | perl -ne 'print $$1 if m/Version:\s*([\d\.]+)/')
get-orig-source: $(PACKAGE)-$(VER)
	@echo "Clean-up..."
	find $(PACKAGE)-$(VER) -type f -name '*.cmd' -delete -printf 'removing %p\n'
	find $(PACKAGE)-$(VER) -type f -name '*.vc*' -delete -printf 'removing %p\n'
	find $(PACKAGE)-$(VER) -depth -type d -name 'macosx' -exec $(RM) -r {} \; -printf 'removing %p\n'
	find $(PACKAGE)-$(VER) -depth -type d -name 'windows' -exec $(RM) -r {} \; -printf 'removing %p\n'
	cd $(PACKAGE)-$(VER) \
	&& $(RM) -r -v \
             build/debian \
             build/msi \
             build/res \
             build/zip \
             ext/scintilla/cocoa \
             ext/scintilla/win32 \
             ext/cppconn/win \
             ext/ctemplate \
             ext/tinyxml \
             frontend/mac \
             library/base.windows \
             library/forms/cocoa \
             MySQLWorkbench.xcodeproj \
             res/fonts \
             tools/utils_wrapper
	@echo "Packing and scanning for copyright changes..."
	tar cJf "$(PACKAGE)_$(VER)+dfsg.orig.tar.xz" "$(PACKAGE)-$(VER)" \
	&& cd $(PACKAGE)-$(VER) \
	&& licensecheck --recursive --copyright --check='.*' --ignore='\.(jpg|ico|icns|mwb|sqlite|png)\Z|^debian/' --lines="99999" * \
	| grep -v '\*No copyright\* UNKNOWN' > ../$(COPHINTS).new
	DIF=$$(diff -U0 $(COPHINTS) $(COPHINTS).new) \
	; [ "$$?" -eq 0 ] && $(RM) $(COPHINTS).new \
	|| echo "$${DIF}" | tee $(COPHINTS).diff
	$(RM) -r $(PACKAGE)-$(VER)

$(PACKAGE)-$(VER):
	uscan --noconf --verbose --force-download --rename --repack --destdir=. --download-current-version
	mkdir $(PACKAGE)-$(VER) \
	&& tar xf $(PACKAGE)_$(VER).orig.tar.gz --directory $(PACKAGE)-$(VER) --strip-components 1 \
	|| $(RM) -r $(PACKAGE)-$(VER)
	#$(RM) $(PACKAGE)_$(VER).orig.tar.gz
